[debug-des-gpu-mosix]
train_data = /tmp/pycharm_project_924/data/imagenette-dummy/train
test_data = /tmp/pycharm_project_924/data/imagenette-dummy/val
num_train_items = 130
num_test_items = 130
num_workers = 12
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
snapshot_set_string = resnet18
distribution = TOP_LAYERS
num_models = 3
approach = mosix
result_dir = /mount-fs/results/debug
benchmark_level = EXECUTION_STEPS
default_cache_location = GPU
limit_fs_io = false
ssd_caching_active = false
cache_size = 10

[debug-des-gpu-out-of-memory]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
num_train_items = -1
num_test_items = -1
num_workers = 8
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
snapshot_set_string = vit_l_32
distribution = FIFTY_PERCENT
num_models = 35
approach = mosix
result_dir = /mount-fs/results/debug
benchmark_level = STEPS_DETAILS
default_cache_location = CPU
limit_fs_io = true
ssd_caching_active = false
cache_size = 50000000

# NEW RUN HERE with larger dataset to see effects of loading data from different media,
# have the suspicion that data is automatically cached in RAM even though we specify SSD as location
[des-gpu-imagenette-base]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
num_train_items = -1
num_test_items = -1
num_workers = 12
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
result_dir = /mount-fs/results/des-gpu-imagenette
limit_fs_io = true
ssd_caching_active = false
cache_size = 100000000



# from here on parameters we want to dynamically overwrite
distribution = TOP_LAYERS
approach = baseline
default_cache_location = GPU
snapshot_set_string = resnet18
num_models = 4
benchmark_level = EXECUTION_STEPS

[des-gpu-imagenette-base-1000]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
num_train_items = 800
num_test_items = 200
num_workers = 12
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
result_dir = /mount-fs/results/des-gpu-imagenette-1000
limit_fs_io = true
ssd_caching_active = false

# from here on parameters we want to dynamically overwrite
distribution = TOP_LAYERS
approach = baseline
default_cache_location = GPU
snapshot_set_string = resnet18
num_models = 4
benchmark_level = EXECUTION_STEPS

# Experiments with limited memory
[debug-des-gpu-out-of-memory-5gb]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
snapshot_set_string = vit_l_32
result_dir = /mount-fs/results/des-gpu-8000-5gb-cache
limit_fs_io = true
ssd_caching_active = true
cache_size = 3000
# params that will be overwritten by script
approach = CHANGE
num_workers = -1
default_cache_location = CHANGE
distribution = CHANGE
num_models = -1
benchmark_level = CHANGE
num_train_items = -1
num_test_items = -1


# Experiments with limited memory
[debug-des-gpu-out-of-memory-10gb]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
snapshot_set_string = vit_l_32
result_dir = /mount-fs/results/des-gpu-8000-10gb-cache
limit_fs_io = true
ssd_caching_active = true
cache_size = 8000
# params that will be overwritten by script
approach = CHANGE
num_workers = -1
default_cache_location = CHANGE
distribution = CHANGE
num_models = -1
benchmark_level = CHANGE
num_train_items = -1
num_test_items = -1


# Experiments with limited memory
[debug-des-gpu-out-of-memory-64gb]
train_data = /tmp/pycharm_project_924/data/imagenette2/train
test_data = /tmp/pycharm_project_924/data/imagenette2/val
batch_size = 128
num_target_classes = 10
persistent_caching_path = /mount-ssd/cache-dir
base_snapshot_save_path = /mount-fs/snapshot-sets
snapshot_set_string = vit_l_32
result_dir = /mount-fs/results/des-gpu-8000-64gb-cache
limit_fs_io = true
ssd_caching_active = true
cache_size = 62000
# params that will be overwritten by script
approach = CHANGE
num_workers = -1
default_cache_location = CHANGE
distribution = CHANGE
num_models = -1
benchmark_level = CHANGE
num_train_items = -1
num_test_items = -1